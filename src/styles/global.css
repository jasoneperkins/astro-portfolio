@import "tailwindcss";

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@theme {
  --font-display: 'Outfit Variable', sans-serif;
  --text-14: 0.875rem;

  --content-width-max: 70.5rem;
  --content-width: min(100%, var(--content-width-max));
  --aside-width: min(24rem, calc(0.3 * var(--content-width)));
  --content-gap: clamp(0.5rem, -0.9445rem + 6.1633vw, 3rem);
  --breakout-width: 3rem;
  --grid-points: 7;

  /* split: `[edge-start] auto [wide-start] minmax(0, var(--breakout-width)) [content-start] calc(min(100%, var(--content-width)) / 2 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [center] calc(min(100%, var(--content-width)) / 2 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [content-end] minmax(0, var(--breakout-width)) [wide-end] auto [edge-end]`,
    aside: `[edge-start] auto [wide-start] minmax(0, var(--breakout-width)) [content-start] calc(min(100%, var(--content-width)) - var(--aside-width) - ((var(--grid-points) - 2) * var(--content-gap))) [center] var(--aside-width) [content-end] minmax(0, var(--breakout-width)) [wide-end] auto [edge-end]`,
    40: `[edge-start] auto [wide-start] minmax(0, var(--breakout-width)) [content-start] calc(min(100%, var(--content-width)) * 0.4 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [center] calc(min(100%, var(--content-width)) * 0.6 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [content-end] minmax(0, var(--breakout-width)) [wide-end] auto [edge-end]`, */
}

/* Base */

/* colors */

html {
  color-scheme: light dark;
  color: light-dark(var(--color-gray-800), var(--color-gray-50));
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

html[data-theme="dark"] {
  color-scheme: dark;
}

html,
main {
  background-color: light-dark(var(--color-gray-50), var(--color-gray-900));
}

/* Components */

/* buttons */

button,
.btn {
  @apply justify-self-start flex gap-x-1 items-center py-3 px-6 rounded transition duration-200;
  @apply leading-snug font-medium text-14;
  @apply bg-blue-800 dark:bg-cyan-300 text-white dark:text-blue-900 shadow-lg shadow-blue-800/50;
  @apply hover:no-underline focus:no-underline hover:bg-blue-900 focus:bg-blue-900 dark:hover:bg-cyan-500 dark:focus:bg-cyan-500 hover:outline-2 focus:outline-2;

  &.btn-blue-cyan {
    @apply bg-gradient-to-r from-[#234FBE] to-cyan-600 shadow-cyan-800/50;
    @apply hover:bg-gradient-to-l focus:bg-gradient-to-l;
  }

  &.btn-transparent {
    @apply bg-transparent shadow-none;
    @apply text-gray-800 dark:text-gray-200;
    @apply hover:outline-2 hover:outline-blue-500/50 hover:backdrop-blur-md hover:bg-white/30 focus:outline-2 focus:outline-blue-500/50 focus:backdrop-blur-md focus:bg-white/20;
  }

  &.btn-sm {
    @apply py-1.5 px-3;
  }

  &.btn-0 {
    @apply p-0;
  }
}

/* overlays */

.overlay-blue {
  border-image: fill 1 linear-gradient(to right, theme("colors.blue.900/80%") 30%, theme("colors.blue.900/20%") 100%);
}

.overlay-blue-cyan {
  border-image: fill 1 linear-gradient(to right, theme("colors.blue.900/80%") 30%, theme("colors.cyan.700/90%") 100%);
}

.overlay-gray {
  border-image: fill 1 linear-gradient(to bottom, theme("colors.gray.900/90%") 30%, theme("colors.gray.900/70%") 100%);
}

.overlay-white {
  border-image: fill 1 linear-gradient(to right, theme("colors.white/80%") 30%, theme("colors.white/50%") 100%);
}

.overlay-sf {
  border-image: fill 1 linear-gradient(to right, theme("colors.blue.700/80%") 40%, theme("colors.white/50%") 40%);
}

/* typography */

html {
  font-size: 18px;
}

h1 {
  @apply leading-none font-bold;
  /* font-size: 2.986rem; */
  font-size: clamp(1.476rem, 0.604rem + 3.723vw, 2.986rem);
}

h2 {
  /* font-size: 1.383rem; */
  font-size: clamp(1.383rem, 0.745rem + 2.724vw, 2.488rem);
}

aside h2 {
  @apply text-lg mb-6;
}

h3 {
  /* font-size: 1.296rem; */
  font-size: clamp(1.296rem, 0.846rem + 1.918vw, 2.074rem);
}

h4 {
  /* font-size: 1.215rem; */
  font-size: clamp(1.215rem, 0.919rem + 1.265vw, 1.728rem);
}

h5 {
  /* font-size: 1.138rem; */
  font-size: clamp(1.138rem, 0.964rem + 0.745vw, 1.44rem);
}

h6 {
  /* font-size: 1.067rem; */
  font-size: clamp(1.067rem, 0.99rem + 0.328vw, 1.2rem);
}

p {
  font-size: 1rem;
}

hgroup p {
  @apply mb-0 flex items-center gap-2 text-14 font-extralight uppercase before:block before:w-6 before:border-t-2 before:border-t-cyan-700 dark:before:border-t-cyan-300 before:content-[""];
}

.small {
  font-size: 0.937rem;
}

.tiny {
  font-size: 0.694rem;
}

a {
  @apply focus-within:underline hover:underline;
}

h1,
:not(hgroup)>p:not(:last-child) {
  margin-bottom: 1em;
}

h2,
h3,
h4,
h5,
h6 {
  @apply leading-none;
  margin-bottom: 0.5em;
  font-weight: 500;
}

main.aside {
  ul:not(:has(article)) {
    @apply my-2 ps-5 list-disc;
  }

  aside ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
}

.text-blue-cyan {
  background-image: linear-gradient(45deg, light-dark(theme("colors.blue.900"), theme("colors.blue.400")), light-dark(theme("colors.cyan.500"),
        theme("colors.cyan.200")));
  background-size: 100%;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

/* Layouts */

/* grid */

body {
  @apply grid min-h-screen w-full;
  grid-template-rows: min-content auto min-content;
}

main.split>*,
:not(main).split {
  @apply grid;
  grid-template-columns: [edge-start] auto [wide-start] minmax(0, var(--breakout-width)) [content-start] calc(min(100%, var(--content-width)) / 2 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [center] calc(min(100%, var(--content-width)) / 2 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [content-end] minmax(0, var(--breakout-width)) [wide-end] auto [edge-end];
  column-gap: var(--content-gap);

  >* {
    @apply col-[content];
  }

  >.half {
    @apply lg:col-[content-start_/_center];

    +.half {
      @apply max-lg:mt-8 lg:col-[center_/_content-end];
    }
  }
}

main.split-40>*,
:not(main).split-40 {
  @apply grid;
  grid-template-columns: [edge-start] auto [wide-start] minmax(0, var(--breakout-width)) [content-start] calc(min(100%, var(--content-width)) * 0.4 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [center] calc(min(100%, var(--content-width)) * 0.6 - ((var(--grid-points) - 2) / 2) * var(--content-gap)) [content-end] minmax(0, var(--breakout-width)) [wide-end] auto [edge-end];
  column-gap: var(--content-gap);

  >* {
    @apply col-[content];
  }

  >.half {
    @apply lg:col-[content-start_/_center];

    +.half {
      @apply max-lg:mt-8 lg:col-[center_/_content-end];
    }
  }
}

main.wide>*,
:not(main).wide {
  /* @apply grid grid-cols-split;
  column-gap: var(--content-gap); */

  >* {
    @apply col-[wide];
  }

  >.half {
    @apply lg:col-[wide-start_/_center];

    +.half {
      @apply max-lg:mt-8 lg:col-[center_/_wide-end];
    }
  }
}

main.aside,
:not(main).aside {
  @apply grid content-start;
  grid-template-columns: [edge-start] auto [wide-start] minmax(0, var(--breakout-width)) [content-start] calc(min(100%, var(--content-width)) - var(--aside-width) - ((var(--grid-points) - 2) * var(--content-gap))) [center] var(--aside-width) [content-end] minmax(0, var(--breakout-width)) [wide-end] auto [edge-end];
  /* grid-template-rows: min-content; */
  column-gap: var(--content-gap);

  >* {
    @apply col-[content] lg:col-[content-start_/_center];
  }

  aside {
    @apply max-lg:mt-8 lg:col-[center_/_content-end] lg:row-[1_/_100];
  }
}

/* sections */

section,
main>div {
  @apply relative overflow-x-clip bg-cover bg-center bg-no-repeat;
  padding-block: clamp(3rem, 1.8444rem + 4.9307vw, 5rem);
}

aside section {
  @apply pt-0;

  &:not(:last-of-type) {
    @apply pb-10 mb-10 border-b;
  }

  &:last-of-type {
    @apply pb-0;
  }
}