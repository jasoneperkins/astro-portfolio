---
import {Astro} from "astro"
import {Icon} from "astro-icon/components"

let theme: string | undefined = Astro.cookies.get("theme")?.value
---

<label class="inline-flex items-center cursor-pointer p-2 rounded-full">
  <input type="checkbox" id="themeToggle" name="themeToggle" checked={theme === "dark"} class="peer sr-only" />
  <Icon name="mdi:white-balance-sunny" class="size-6 text-white hidden peer-checked:block" aria-label="Set the site theme to light" />
  <Icon name="mdi:moon-waning-crescent" class="size-6 text-gray-900 block peer-checked:hidden" aria-label="Set the site theme to dark" />
</label>

<script is:inline>
  const toggle = document.querySelector("#themeToggle")

  toggle?.addEventListener("change", e => getThemeToggle(e))

  const getThemeToggle = e => {
    let theme = e.target.checked ? "dark" : "light"
    setThemeCookie(theme)
    setThemeSite(theme)
  }

  const getThemePrefer = () => (window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light")

  function getThemeCookie() {
    const value = `; ${document.cookie}`
    const parts = value.split(`; theme=`)
    if (parts.length === 2) return parts.pop().split(";").shift()
  }

  function setThemeToggle(theme) {
    toggle.checked = theme === "dark"
  }

  function setThemeCookie(theme) {
    document.cookie = `theme=${theme}`
  }

  function setThemeSite(theme) {
    document.documentElement.style.colorScheme = theme
    document.documentElement.setAttribute("data-theme", theme)
  }

  window.onload = () => {
    const themePreferDark = getThemePrefer() === "dark"
    const themeCookieDark = getThemeCookie() === "dark"
    const theme = themePreferDark || themeCookieDark ? "dark" : "light"
    setThemeToggle(theme)
    setThemeSite(theme)
  }
</script>
